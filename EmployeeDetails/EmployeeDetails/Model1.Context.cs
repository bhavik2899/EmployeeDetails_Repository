//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeDetails
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmployeeDetailsEntities : DbContext
    {
        public EmployeeDetailsEntities()
            : base("name=EmployeeDetailsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Privilege> Privileges { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserRolePrivilege> UserRolePrivileges { get; set; }
    
        public virtual ObjectResult<sp_EmployeeListByDate_Result> sp_EmployeeListByDate(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmployeeListByDate_Result>("sp_EmployeeListByDate", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_HighestSalarybyDep_Result> sp_HighestSalarybyDep()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HighestSalarybyDep_Result>("sp_HighestSalarybyDep");
        }
    
        public virtual int Sp_RolePrivilegeWXml(string xmlDoc)
        {
            var xmlDocParameter = xmlDoc != null ?
                new ObjectParameter("XmlDoc", xmlDoc) :
                new ObjectParameter("XmlDoc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_RolePrivilegeWXml", xmlDocParameter);
        }
    
        public virtual int Sp_AddEditUser(Nullable<long> user_Id, string userName, string password, string fName, string lName, string moileNo, Nullable<long> roleId)
        {
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("user_Id", user_Id) :
                new ObjectParameter("user_Id", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("lName", lName) :
                new ObjectParameter("lName", typeof(string));
    
            var moileNoParameter = moileNo != null ?
                new ObjectParameter("moileNo", moileNo) :
                new ObjectParameter("moileNo", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_AddEditUser", user_IdParameter, userNameParameter, passwordParameter, fNameParameter, lNameParameter, moileNoParameter, roleIdParameter);
        }
    }
}
